# EarFun Audio Blog - Project Management Automation
# This workflow manages issue tracking, team notifications, and project status updates

name: 🚀 Issue Sync & Project Management Automation

on:
  push:
    branches: [ main ]
  issues:
    types: [opened, closed, assigned, labeled]
  issue_comment:
    types: [created]
  pull_request:
    types: [opened, closed, merged]
  schedule:
    # Run every day at 9 AM UTC to sync project status
    - cron: '0 9 * * *'
  workflow_dispatch:
    inputs:
      sync_type:
        description: 'Type of sync to perform'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - issues-only
        - notifications-only

jobs:
  notify-team:
    name: 📧 Notify Team on Changes
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'issues'
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 📬 Extract Commit Info
        id: commit_info
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "type=push" >> $GITHUB_OUTPUT
            echo "message=${{ github.event.head_commit.message }}" >> $GITHUB_OUTPUT
            echo "author=${{ github.event.head_commit.author.name }}" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "issues" ]; then
            echo "type=issue" >> $GITHUB_OUTPUT
            echo "message=Issue ${{ github.event.action }}: ${{ github.event.issue.title }}" >> $GITHUB_OUTPUT
            echo "author=${{ github.event.issue.user.login }}" >> $GITHUB_OUTPUT
          fi

      - name: 🗿 Log Activity
        run: |
          echo "## 🎧 EarFun Blog Activity Log - $(date)" >> activity.log
          echo "- **Event:** ${{ steps.commit_info.outputs.type }}" >> activity.log
          echo "- **Author:** ${{ steps.commit_info.outputs.author }}" >> activity.log
          echo "- **Message:** ${{ steps.commit_info.outputs.message }}" >> activity.log
          echo "- **Repository:** ${{ github.repository }}" >> activity.log
          echo "- **Branch:** ${{ github.ref_name }}" >> activity.log
          echo "---" >> activity.log

      - name: 📊 Update Project Metrics
        run: |
          # Count open issues by label
          echo "## 📊 Current Project Status" > project-status.md
          echo "**Last Updated:** $(date)" >> project-status.md
          echo "" >> project-status.md
          echo "### 🚀 Week 1 - Affiliate Infrastructure" >> project-status.md
          echo "- Issues: $(gh issue list --label enhancement --state open --json number | jq length)" >> project-status.md
          echo "- Status: In Progress" >> project-status.md
          echo "" >> project-status.md
          echo "### 📊 Week 2-3 - Conversion Optimization" >> project-status.md
          echo "- Issues: Active" >> project-status.md
          echo "- Status: Ready" >> project-status.md
          echo "" >> project-status.md
          echo "### 🔍 Week 3-4 - SEO & Technical" >> project-status.md
          echo "- Issues: Active" >> project-status.md
          echo "- Status: Ready" >> project-status.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  track-commits:
    name: 🔄 Track Development Progress
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📊 Analyze Commit Impact
        run: |
          echo "## 🔄 Recent Development Activity" > commit-analysis.md
          echo "**Analysis Date:** $(date)" >> commit-analysis.md
          echo "" >> commit-analysis.md
          
          # Count commits in last 24 hours
          RECENT_COMMITS=$(git log --since="24 hours ago" --oneline | wc -l)
          echo "- **Recent Commits (24h):** $RECENT_COMMITS" >> commit-analysis.md
          
          # Check for affiliate-related changes
          AFFILIATE_CHANGES=$(git log --since="7 days ago" --grep="affiliate\|revenue\|cta" --oneline | wc -l)
          echo "- **Affiliate Feature Commits (7d):** $AFFILIATE_CHANGES" >> commit-analysis.md
          
          # Check for SEO-related changes
          SEO_CHANGES=$(git log --since="7 days ago" --grep="seo\|meta\|schema" --oneline | wc -l)
          echo "- **SEO Enhancement Commits (7d):** $SEO_CHANGES" >> commit-analysis.md
          
          echo "" >> commit-analysis.md
          echo "### 🚀 Priority Recommendations" >> commit-analysis.md
          if [ $AFFILIATE_CHANGES -eq 0 ]; then
            echo "- ⚠️ **Action Required:** No affiliate infrastructure commits detected. Review Issue #1." >> commit-analysis.md
          fi
          if [ $SEO_CHANGES -eq 0 ]; then
            echo "- 🔍 **SEO Focus:** Consider implementing structured data (Issue #3)." >> commit-analysis.md
          fi

  auto-assign-issues:
    name: 📎 Auto-Assign Team Members
    runs-on: ubuntu-latest
    if: github.event_name == 'issues' && github.event.action == 'opened'
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 🎨 Auto-Assign Based on Labels
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          
          # Simulate team assignments based on issue content
          if echo "$ISSUE_TITLE" | grep -i "week 1\|affiliate"; then
            echo "🚀 Would assign to: @dev-team-lead (Affiliate Infrastructure)"
            gh issue edit ${{ github.event.issue.number }} --add-label "week-1,high-priority,affiliate"
          elif echo "$ISSUE_TITLE" | grep -i "week 2\|conversion"; then
            echo "📊 Would assign to: @frontend-dev-team (Conversion Optimization)"
            gh issue edit ${{ github.event.issue.number }} --add-label "week-2-3,conversion,ux"
          elif echo "$ISSUE_TITLE" | grep -i "week 3\|seo"; then
            echo "🔍 Would assign to: @seo-specialist (SEO & Technical)"
            gh issue edit ${{ github.event.issue.number }} --add-label "week-3-4,seo,technical"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  daily-sync:
    name: 🔄 Daily Project Sync
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 📊 Generate Daily Status Report
        run: |
          echo "# 🎧 EarFun Audio Blog - Daily Status Report" > daily-report.md
          echo "**Generated:** $(date)" >> daily-report.md
          echo "" >> daily-report.md
          
          # Issue status summary
          echo "## 📎 Issue Summary" >> daily-report.md
          TOTAL_ISSUES=$(gh issue list --state all --json number | jq length)
          OPEN_ISSUES=$(gh issue list --state open --json number | jq length)
          CLOSED_ISSUES=$(gh issue list --state closed --json number | jq length)
          
          echo "- **Total Issues:** $TOTAL_ISSUES" >> daily-report.md
          echo "- **Open Issues:** $OPEN_ISSUES" >> daily-report.md
          echo "- **Closed Issues:** $CLOSED_ISSUES" >> daily-report.md
          echo "" >> daily-report.md
          
          # Phase progress
          echo "## 🚀 Implementation Progress" >> daily-report.md
          echo "### Week 1: Affiliate Infrastructure" >> daily-report.md
          echo "- Status: $([ $OPEN_ISSUES -gt 0 ] && echo "Active" || echo "Pending")" >> daily-report.md
          echo "- Priority: High (Revenue Impact)" >> daily-report.md
          echo "" >> daily-report.md
          echo "### Week 2-3: Conversion Optimization" >> daily-report.md
          echo "- Status: Ready for Development" >> daily-report.md
          echo "- Focus: Product comparison tables, CTAs" >> daily-report.md
          echo "" >> daily-report.md
          echo "### Week 3-4: SEO & Technical" >> daily-report.md
          echo "- Status: Planning Phase" >> daily-report.md
          echo "- Focus: Structured data, content expansion" >> daily-report.md
          echo "" >> daily-report.md
          
          # Next actions
          echo "## 🎯 Next Actions Required" >> daily-report.md
          echo "- [ ] Review and update affiliate link components" >> daily-report.md
          echo "- [ ] Implement CTA buttons on existing reviews" >> daily-report.md
          echo "- [ ] Set up affiliate disclosure templates" >> daily-report.md
          echo "- [ ] Begin product comparison table development" >> daily-report.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📎 Update Project Board
        run: |
          echo "🗺️ Project board would be updated with:" 
          echo "- Current sprint status"
          echo "- Completed tasks"
          echo "- Blocked items"
          echo "- Team workload distribution"

      - name: 🔔 Trigger Notifications
        run: |
          echo "🔔 Team notifications would be sent for:"
          echo "- Daily standup reminder"
          echo "- Overdue task alerts"
          echo "- Milestone approaching warnings"
          echo "- Revenue impact updates"

  performance-tracking:
    name: 📈 Track Site Performance Metrics
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    steps:
      - name: 📁 Checkout Repository
        uses: actions/checkout@v4

      - name: 📈 Simulate Performance Metrics
        run: |
          echo "# 📈 Performance Metrics Report" > metrics.md
          echo "**Date:** $(date)" >> metrics.md
          echo "" >> metrics.md
          echo "## 🎧 Site Metrics (Simulated)" >> metrics.md
          echo "- **Page Views:** 12,450 (+15% vs last week)" >> metrics.md
          echo "- **Affiliate Clicks:** 234 (+8% improvement)" >> metrics.md
          echo "- **Conversion Rate:** 3.2% (+0.5% increase)" >> metrics.md
          echo "- **Revenue:** $1,847 (+22% growth)" >> metrics.md
          echo "" >> metrics.md
          echo "## 🚀 Optimization Impact" >> metrics.md
          echo "- **CTA Improvements:** Pending implementation" >> metrics.md
          echo "- **SEO Enhancements:** In development" >> metrics.md
          echo "- **Mobile Performance:** 85/100 (Target: 95/100)" >> metrics.md
          
      - name: 🎨 Generate Action Items
        run: |
          echo "" >> metrics.md
          echo "## 🏆 Recommended Actions" >> metrics.md
          echo "- [ ] Implement affiliate button component (Issue #1)" >> metrics.md
          echo "- [ ] Add product comparison tables (Issue #2)" >> metrics.md
          echo "- [ ] Optimize page load speeds (Issue #3)" >> metrics.md
          echo "- [ ] A/B test CTA button colors and placement" >> metrics.md
